extends layout
block content
  div(class="container-fluid justify-content-center" style="margin-top: 15px")
    div(class="jumbotron")
      div(class="row")
        div(class="col-md-6")
          h1(class="display-4")=title
          p(class="lead-4" id="description")
        div(class="col-md-6")
          img(class="img-fluid rounded mx-auto d-block" id="poster" alt="Poster Art")
  div(class="container justify-content-center")
    div(class="row" id="controls")
    div(class="row")
      div(class="col-md-6 embed-responsive embed-responsive-4by3" id="playerCol")
      div(class="col-md-6" id="episodeCol")
        div(class="container-fluid" id="episodeList")
  block scripts
    script(src="/javascripts/mal/api.js")
    script.
        function playSRC(url) {
          document.querySelector('#playerCol').innerHTML = "";
          document.querySelector('#playerCol').innerHTML = `<iframe class="embed-responsive-item" src="${url}" sandbox allowfullscreen></iframe>`
        }
    script.
        class WArray extends Array {
          constructor(watchedLength, cb) {
            super();
            this.watchedLength = watchedLength;
            this.cb = cb;
          }
          push(e) {
            if(this.length < this.watchedLength) {
            super.push(e);
            if(this.length >= this.watchedLength) this.cb();
            }
          }
        }

        const api = (window.location.href.includes('localhost')) ? io('http://localhost:3000/api') : io('http://76.64.123.119:3000/api');
        function request() {
          document.querySelector('#alerts').innerHTML += `<div class="alert alert-primary alert-dismissible fade show" role="alert">Scrape Request Sent!<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>`
          api.on('request/anime:done', () => {
            document.querySelector('#alerts').innerHTML += `<div class="alert alert-success alert-dismissible fade show" role="alert">Completed Scrape! Added to Database!<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>`
          });
          api.emit('request/anime', {title: '#{title}'});
        }

        api.on('search/animes:result', (res) => {
          if(res) {
            let episodeList = document.querySelector('#episodeList');
            let episodes = new WArray(res[0].episodes.length, () => {
              episodes.sort((a, b) => {
                return a[0].id - b[0].id;
              });
              //console.log(episodes);
              for(let i = 0; i < episodes.length; i+=6) {
                let row = document.createElement('div');
                row.className = "row btn-group";
                episodeList.appendChild(row);
                let eps = episodes.slice(i, i+6);
                eps.forEach((e, j) => {
                  let col = document.createElement('div');
                  col.className = "col-sm-1";
                  col.innerHTML = `<button class="btn btn-primary btn-ep" onclick=playSRC('${e[0].sources[0].player}')>${i+j}</button>`;
                  row.appendChild(col);
                })
              }
            });
            api.on('search/episode:result', (res) => {
              episodes.push(res);
            });
            res[0].episodes.forEach((id) => {
              api.emit('search/episode', {_id: id});
            });

            console.log(episodes)
          } else {
            document.querySelector('#controls').innerHTML += `<button class="btn btn-primary" onclick=request()>Request</button>`;
          }
        });

        (async() => {
            let meta = await getAnime({id: '#{mal_id}'});
            document.querySelector('#description').innerHTML = meta.synopsis;
            document.querySelector('#poster').src = meta.image_url;

            api.emit('search/animes', {title: meta.title});
        })();
